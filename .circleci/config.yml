version: 2
# CircleCI integration with Drupal 8.

## Defines images and working directory.
defaults: &defaults
  docker:
    - image: pookmish/drupal8ci:php8
    - image: selenium/standalone-chrome:latest
    - image: cimg/mysql:5.7
      environment:
        MYSQL_DATABASE: drupal
        MYSQL_USER: drupal
        MYSQL_PASSWORD: drupal
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
      command: ['--max-allowed-packet=67108864']
  working_directory: /var/www/html

back_to_dev: &back_to_dev
  <<: *defaults
  steps:
    - checkout
    - run:
        name: Back to dev
        command: |
          composer global require su-sws/stanford-caravan:dev-8.x-2.x
          ~/.composer/vendor/bin/sws-caravan back-to-dev ${CIRCLE_TAG} ${CIRCLE_WORKING_DIRECTORY} main

d9_codeception: &d9_codeception
  <<: *defaults
  steps:
    - checkout:
        path: /var/www/test
    - run:
        name: Run Codeception Tests
        command: |
          composer global require su-sws/stanford-caravan:dev-8.x-2.x
          ~/.composer/vendor/bin/sws-caravan codeception /var/www/html --extension-dir=/var/www/test --suites=functional
#          ~/.composer/vendor/bin/sws-caravan codeception /var/www/html --extension-dir=/var/www/test
    - store_test_results:
        path: /var/www/html/artifacts
    - store_artifacts:
        path: /var/www/html/artifacts

merge_upstream: &merge_upstream
  <<: *defaults
  steps:
    - checkout:
        path: /var/www/html
    - run:
        name: Merge stanford_profile upstream
        command: |
          git config --global user.email "sws-developers@lists.stanford.edu"
          git config --global user.name "CircleCI"
          git pull https://github.com/SU-SWS/stanford_profile.git main -X ours --no-edit
          if [[ $(git diff origin/${CIRCLE_BRANCH} --name-only) ]]; then
            DATE=`date +%Y-%m-%d`
            git checkout -b ${DATE}-${CIRCLE_BRANCH}
            git push origin ${DATE}-${CIRCLE_BRANCH}
            gh pr create -B ${CIRCLE_BRANCH} -b "Updates from stanford_profile" -a pookmish -f
          fi

# Declare all the jobs we should run.
jobs:
  run-back-to-dev:
    <<: *back_to_dev
  run-d9-codeception:
    <<: *d9_codeception
  run-merge-upstream:
    <<: *merge_upstream

# Declare a workflow that runs all of our jobs in parallel.
workflows:
  version: 2
  after_release:
    jobs:
      - run-back-to-dev:
          filters:
            tags:
              only:
                - /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*).*?$/
            branches:
              ignore:
                - /.*/
  tests:
    jobs:
      - run-d9-codeception
  daily:
    jobs:
      - run-merge-upstream
    triggers:
      - schedule:
          cron: "0 8 * * *"
          filters:
            branches:
              only:
                - /9.x/
